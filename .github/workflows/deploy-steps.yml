name: Deploy Steps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Execute tests
        working-directory: ./src
        run: "dotnet test ../test/SampleApp.Test/SampleApp.Test.csproj"
      - name: Print variables
        run: echo "$REPO_FULL_NAME" && echo "$REPO_NAME" && echo "$EVENT_NAME" echo "$GITHUB_ACCOUNT_ACTOR"
        env:
          REPO_FULL_NAME: ${{ github.event.pull_request.head.repo.full_name }}
          REPO_NAME: ${{ github.repository }}
          EVENT_NAME: ${{ github.event_name }}
          GITHUB_ACCOUNT_ACTOR: ${{ github.actor }}
  
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.actor == 'luizhlelis'
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::872175912550:role/custom-github-actions-role
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      working-directory: ./src
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: sample-app-api
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
        docker push --all-tags $REGISTRY/$REPOSITORY